set nocompatible

" Plugins
if empty(glob('~/.vim/autoload/plug.vim'))
	silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
		\ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/plugged')
Plug 'christoomey/vim-tmux-navigator'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'dhruvasagar/vim-table-mode'
Plug 'itchyny/lightline.vim'
Plug 'maxmellon/vim-jsx-pretty'
Plug 'mileszs/ack.vim'
Plug 'nanotech/jellybeans.vim'
Plug 'pangloss/vim-javascript'
Plug 'rhysd/vim-crystal'
Plug 'scrooloose/nerdcommenter'
Plug 'scrooloose/nerdtree'
Plug 'taohexxx/lightline-buffer'
Plug 'tpope/vim-sensible'
Plug 'tpope/vim-sleuth'
Plug 'tpope/vim-speeddating'
Plug 'tpope/vim-fugitive'
call plug#end()

" Files
set directory=~/.vim/swap//
set undodir=~/.vim/undo//
set undofile

" Behavior
let mapleader = ","
set bs=2
set clipboard=unnamed
set hidden
set ignorecase
set nowrap
set number
set scrolloff=5
set smartcase
set mouse=a

" Indentation defaults (does not override vim-sleuth's indenting detection)
set tabstop=4
if get(g:, '_has_set_default_indent_settings', 0) == 0
	set shiftwidth=4
	set smartindent
	set noexpandtab
	let g:_has_set_default_indent_settings = 1
endif

" Visual
set list listchars=tab:›\ ,trail:·,eol:¬
set background=dark
silent! color jellybeans


"
" Plugins
"

" NERDTree
let g:NERDTreeChDirMode=2
nmap <Leader>n :NERDTreeToggle<CR>

" Ctrl+P
let g:ctrlp_working_path_mode='ra'
let g:ctrlp_custom_ignore = {
	\ 'dir':  '\v[\/](.git|.hg|.svn|.next|node_modules|dist|build)$'
\ }

" ack.vim
nnoremap <Leader>f :Ack!<Space>
nnoremap K :grep! "\b<C-R><C-W>\b"<CR>:cw<CR>

" ag (The Silver Searcher)
" See https://robots.thoughtbot.com/faster-grepping-in-vim
if executable('ag')
	" Use ag over grep
	"set grepprg=ag\ --nogroup\ --nocolor
	set grepprg=ag

	" Use ag in ack.vim
	let g:ackprg = 'ag --vimgrep'

	" Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
	let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

	" ag is fast enough that CtrlP doesn't need to cache
	let g:ctrlp_use_caching = 0
endif

" Lightline
set noshowmode
set laststatus=2
let g:lightline = {
	\ 'colorscheme': 'jellybeans'
\ }

" Lightline Buffer
set showtabline=2
let g:lightline = {
	\ 'tabline': {
	\   'left': [ [ 'bufferinfo' ],
	\             [ 'separator' ],
	\             [ 'bufferbefore', 'buffercurrent', 'bufferafter' ], ],
	\   'right': [ [ 'close' ], ],
	\ },
	\ 'component_expand': {
	\   'buffercurrent': 'lightline#buffer#buffercurrent',
	\   'bufferbefore': 'lightline#buffer#bufferbefore',
	\   'bufferafter': 'lightline#buffer#bufferafter',
	\ },
	\ 'component_type': {
	\   'buffercurrent': 'tabsel',
	\   'bufferbefore': 'raw',
	\   'bufferafter': 'raw',
	\ },
	\ 'component_function': {
	\   'bufferinfo': 'lightline#buffer#bufferinfo',
	\ },
	\ 'component': {
	\   'separator': '',
	\ },
\ }
let g:lightline_buffer_logo = ''
let g:lightline_buffer_readonly_icon = ''
let g:lightline_buffer_modified_icon = '✭'
let g:lightline_buffer_git_icon = ' '
let g:lightline_buffer_ellipsis_icon = '..'
let g:lightline_buffer_expand_left_icon = '◀ '
let g:lightline_buffer_expand_right_icon = ' ▶'
let g:lightline_buffer_active_buffer_left_icon = ''
let g:lightline_buffer_active_buffer_right_icon = ''
let g:lightline_buffer_separator_icon = '  '
let g:lightline_buffer_show_bufnr = 1
let g:lightline_buffer_rotate = 0
let g:lightline_buffer_fname_mod = ':t'
let g:lightline_buffer_excludes = ['vimfiler']
let g:lightline_buffer_maxflen = 30
let g:lightline_buffer_maxfextlen = 3
let g:lightline_buffer_minflen = 16
let g:lightline_buffer_minfextlen = 3
let g:lightline_buffer_reservelen = 20

" vim-jsx
let g:vim_jsx_pretty_colorful_config=1
